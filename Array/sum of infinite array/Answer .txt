Prefix Sum Array
The better idea is to first create the sum array in which sumArray[i] stores the sum from (A[0]+....+A[i]). Now instead of iterating from L to R like in the previous approach, we find the sum using our sumArray[].

Let’s take an example, where array A = [1,2,3] and we have to find the sum of the subarray of the infinite array(as shown in below fig) from index 3 to 10 (0-based indexing). 

Now instead of iterating from 3 to 10 and then calculate the sum. We can observe one thing that we are going to traverse the array A again and again so instead of doing this, we can first find the sum from index 0 to index 10 say a, and then find the sum from index 0 to 2 say b, then subtract b from a as a-b, which is the sum of subarray from index 3  to 10 in an infinite array B.
Now to find the sum, from index 0 to any index X, we first find how many number of times the given array A can comes completely upto index X. which can be simply found by X / N say count , and sum will be count * sumArray[N] where N is the length of array A. Now for the remaining part of the subarray sum can be found by sumArray[ (X % N)]. 
Consider array A = {1, 2, 3} and we have to find the sum between L= 1 and R = 5. Then Till index 5 the array A repeats itself one time i.e {1, 2, 3, 1, 2} which can be calculated as R/N i.e 1 and the remaining elements till index 5 are {1, 2} which can be calculated as R%N. So the sum till index 5 is R/N * sumArray(N) + sumArray(R%N).
So this way we can find the sum without iterating from L to R.

Time Complexity
O(Q+N) per test case, where N is the size of the given array, and Q is the number of queries given

In the worst case, we will only traverse the given array, O(N) only one time, and for each query (O(Q)), we will be calculating the sum in constant time. Thus a total of O(N+Q) time will be required.   

Space Complexity
O(N), where ‘N’ is the size of the given array.

In the worst case, we will be storing the prefix sums in an array, of size N, Thus a total of O(N) space will be required.